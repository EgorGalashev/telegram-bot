import telebot #–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º(–ø–æ–¥–∫–ª—é—á–∞–µ–º) –º–æ–¥—É–ª—å —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–∞.
from random import randint #–ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª.


#–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–æ—Ç—É —á–µ—Ä–µ–∑ –µ–≥–æ –¢–û–ö–ï–ù.
bot = telebot.TeleBot("1439408799:AAH6VxNNvXcrrtl3BcXUDDvnHEP3UhGBYCA")


animals = ["—Ç–∏–≥—Ä", "–ª–µ–æ–ø–∞—Ä–¥"]
geography = ["–∞—Ñ—Ä–∏–∫–∞","–∞–º–µ—Ä–∏–∫–∞"]
space = ['—Å–∫–∞—Ñ–∞–Ω–¥—Ä', '–ª—É–Ω–∞']
other = ["–∞–Ω—Ç–∞—Ä–∫—Ç–∏–¥–∞", "–ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥", "–∞–∫–≤–∞–ª–∞–Ω–≥", "–ø—ã–ª–µ—Å–æ—Å", "–∫–æ—Ä–∞–±–ª–µ–∫—Ä—É—à–µ–Ω–∏–µ"]

word = None

letters = []
not_guessed = []


#########  –û–¢–í–ï–¢ –ù–ê –ö–û–ú–ê–ù–î–£ START
@bot.message_handler(commands=['start'])  # –õ–æ–≤–∏–º –∫–æ–º–∞–Ω–¥—É START
def start_message(message):
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton(text='–ñ–∏–≤–æ—Ç–Ω—ã–µ', callback_data=1))
    markup.add(telebot.types.InlineKeyboardButton(text='–ì–µ–æ–≥—Ä–∞—Ñ–∏—è', callback_data=2))
    markup.add(telebot.types.InlineKeyboardButton(text='–ö–æ—Å–º–æ—Å', callback_data=3))
    markup.add(telebot.types.InlineKeyboardButton(text='–†–∞–∑–Ω–æ–µ', callback_data=4))
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ –≤–∏—Å–µ–ª–∏—Ü—É, —è —Ö–æ—á—É –∑–∞–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ, –≤—ã–±–µ—Ä–∏ —Ç–µ–º—É: ",
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    # bot.answer_callback_query(callback_query_id=call.id, text='–°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç!')

    if call.data == '1':
        words = animals

    elif call.data == '2':
        words = geography

    elif call.data == '3':
        words = space

    elif call.data == '4':
        words = other

    global word
    word = words[randint(0, len(words) - 1)]


    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
    bot.send_message(call.message.chat.id, "–Ø –∑–∞–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ, –≤ –Ω—ë–º " + str(len(word)) + " –±—É–∫–≤. –ü–æ–ø—Ä–æ–±—É–π –µ–≥–æ —É–≥–∞–¥–∞—Ç—å!")


######## O–¢–í–ï–¢ –ù–ê –¢–ï–ö–°–¢–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï
@bot.message_handler(content_types=['text'])  # –õ–æ–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º
def otvet(message):
    print(message.text)
    letter = message.text.lower()

    if len(letter) == 1:  # –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ 1 –±—É–∫–≤—É
        if letter in word:
            bot.send_message(message.chat.id, "–¢–∞–∫–∞—è –±—É–∫–≤–∞ –µ—Å—Ç—å")
            letters.append(letter)  # –î–æ–±–∞–≤–∏–º  –±—É–∫–≤—É –≤ —Å–ø–∏—Å–æ–∫ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤

        else:
            bot.send_message(message.chat.id, "–ù–µ—Ç —Ç–∞–∫–æ–π –±—É–∫–≤—ã")
            # –î–æ–±–∞–≤–ª—è–µ–º –±—É–∫–≤—É –≤ —Å–ø–∏–æ–∫ –Ω–µ—É–≥–∞–¥–∞–Ω–Ω—ã—Ö

    else:  # –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ —Ü–µ–ª–æ–µ —Å–ª–æ–≤–æ
        if letter == word:
            bot.send_message(message.chat.id, "–î–∞–∞–∞–∞–∞! –¢—ã —É–≥–∞–¥–∞–ª!")
            return
        else:
            bot.send_message(message.chat.id, "–ù–µ —É–≥–∞–¥–∞–ª!")


    prompt = ''
    quessed = True
    for l in word:
        if l in letters:
            prompt += l
        else:
            prompt += "üî¥"
            quessed = False

    if quessed == True:
        bot.send_message(message.chat.id, 'URAA!')

    bot.send_message(message.chat.id, prompt)
    if len(not_guessed) > 0:
        bot.send_message(message.chat.id, not_guessed)


bot.polling()  # –ó–∞–ø—Ä–æ—Å —Å–æ–æ–±—â–µ–Ω–∏–π
